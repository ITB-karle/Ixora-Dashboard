{"ast":null,"code":"export async function apiRequest(url, data = null, method = data ? 'POST' : 'GET', authentication = true) {\n  let accessToken = null;\n\n  // Add authentication header if authentication is true\n  if (authentication) {\n    accessToken = localStorage.getItem('access_token');\n    if (!accessToken) {\n      throw new Error('Access token not found in local storage');\n    }\n  } else {\n    console.log(\"error\");\n  }\n  const myHeaders = new Headers();\n  myHeaders.append(\"Accept\", \"application/json\");\n  if (accessToken) {\n    myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\n  }\n  const requestOptions = {\n    method: method,\n    headers: myHeaders,\n    body: null // Initialize body as null\n  };\n\n  // Initialize formData if data is provided\n  // if (data) {\n  //     const formData = new FormData();\n  //     for (const key in data) {\n  //         formData.append(key, data[key]);\n  //     }\n  //     requestOptions.body = formData; // Assign formData to requestOptions.body\n  // }\n  if (data) {\n    console.log(data);\n    const formData = new FormData();\n    for (let key in data) {\n      // console.log(data[key])\n\n      if (data[key]?.url) {\n        const uri = data[key].url;\n        const type = data[key].mimeType;\n        const name = data[key].fileName ?? 'image.jpg';\n        formData.append(key, {\n          uri: uri,\n          type: type,\n          name: name,\n          fileName: name,\n          size: data[key].fileSize\n        });\n      } else {\n        formData.append(key, data[key]);\n      }\n    }\n    requestOptions.body = formData; // Assign formData to requestOptions.body\n  }\n  try {\n    const response = await fetch(url, requestOptions);\n\n    // Check if the response status is 401\n    if (response.status === 401) {\n      console.error('Unauthorized access - redirecting to login.');\n      window.location.href = '/signin'; // Adjust the path to your login page as necessary\n      return; // Exit the function after redirect\n    }\n    const responseData = await response.json();\n    return {\n      ...responseData,\n      http_status: response.status\n    };\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["apiRequest","url","data","method","authentication","accessToken","localStorage","getItem","Error","console","log","myHeaders","Headers","append","requestOptions","headers","body","formData","FormData","key","uri","type","mimeType","name","fileName","size","fileSize","response","fetch","status","error","window","location","href","responseData","json","http_status"],"sources":["C:/Users/chink/Documents/GitHub/ixora-dashboard/src/assets/js/apiRequest.js"],"sourcesContent":["export async function apiRequest(url, data = null, method = data ? 'POST' : 'GET', authentication = true) {\r\n    let accessToken = null;\r\n\r\n    // Add authentication header if authentication is true\r\n    if (authentication) {\r\n        accessToken = localStorage.getItem('access_token');\r\n        if (!accessToken) {\r\n            throw new Error('Access token not found in local storage');\r\n        }\r\n    } else {\r\n        console.log(\"error\");\r\n    }\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Accept\", \"application/json\");\r\n    if (accessToken) {\r\n        myHeaders.append(\"Authorization\", `Bearer ${accessToken}`);\r\n    }\r\n\r\n    const requestOptions = {\r\n        method: method,\r\n        headers: myHeaders,\r\n        body: null, // Initialize body as null\r\n    };\r\n\r\n    // Initialize formData if data is provided\r\n    // if (data) {\r\n    //     const formData = new FormData();\r\n    //     for (const key in data) {\r\n    //         formData.append(key, data[key]);\r\n    //     }\r\n    //     requestOptions.body = formData; // Assign formData to requestOptions.body\r\n    // }\r\n    if (data) {\r\n        console.log(data)\r\n        const formData = new FormData();\r\n\r\n    for (let key in data) {\r\n        // console.log(data[key])\r\n\r\n        if (data[key]?.url) {\r\n            const uri = data[key].url;\r\n            const type = data[key].mimeType;\r\n            const name = data[key].fileName ?? 'image.jpg';\r\n            formData.append(key, {\r\n                uri: uri,\r\n                type: type,\r\n                name: name,\r\n                fileName: name,\r\n                size: data[key].fileSize,\r\n            });\r\n        } else {\r\n            formData.append(key, data[key]);\r\n        }\r\n    }\r\n\r\n    requestOptions.body = formData; // Assign formData to requestOptions.body\r\n}\r\n\r\n    try {\r\n        const response = await fetch(url, requestOptions);\r\n\r\n        // Check if the response status is 401\r\n        if (response.status === 401) {\r\n            console.error('Unauthorized access - redirecting to login.');\r\n            window.location.href = '/signin';  // Adjust the path to your login page as necessary\r\n            return;  // Exit the function after redirect\r\n        }\r\n        const responseData = await response.json();\r\n        return { ...responseData, http_status: response.status};\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n    }\r\n}"],"mappings":"AAAA,OAAO,eAAeA,UAAUA,CAACC,GAAG,EAAEC,IAAI,GAAG,IAAI,EAAEC,MAAM,GAAGD,IAAI,GAAG,MAAM,GAAG,KAAK,EAAEE,cAAc,GAAG,IAAI,EAAE;EACtG,IAAIC,WAAW,GAAG,IAAI;;EAEtB;EACA,IAAID,cAAc,EAAE;IAChBC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAI,CAACF,WAAW,EAAE;MACd,MAAM,IAAIG,KAAK,CAAC,yCAAyC,CAAC;IAC9D;EACJ,CAAC,MAAM;IACHC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACxB;EAEA,MAAMC,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC/BD,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC;EAC9C,IAAIR,WAAW,EAAE;IACbM,SAAS,CAACE,MAAM,CAAC,eAAe,EAAE,UAAUR,WAAW,EAAE,CAAC;EAC9D;EAEA,MAAMS,cAAc,GAAG;IACnBX,MAAM,EAAEA,MAAM;IACdY,OAAO,EAAEJ,SAAS;IAClBK,IAAI,EAAE,IAAI,CAAE;EAChB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAId,IAAI,EAAE;IACNO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjB,MAAMe,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAEnC,KAAK,IAAIC,GAAG,IAAIjB,IAAI,EAAE;MAClB;;MAEA,IAAIA,IAAI,CAACiB,GAAG,CAAC,EAAElB,GAAG,EAAE;QAChB,MAAMmB,GAAG,GAAGlB,IAAI,CAACiB,GAAG,CAAC,CAAClB,GAAG;QACzB,MAAMoB,IAAI,GAAGnB,IAAI,CAACiB,GAAG,CAAC,CAACG,QAAQ;QAC/B,MAAMC,IAAI,GAAGrB,IAAI,CAACiB,GAAG,CAAC,CAACK,QAAQ,IAAI,WAAW;QAC9CP,QAAQ,CAACJ,MAAM,CAACM,GAAG,EAAE;UACjBC,GAAG,EAAEA,GAAG;UACRC,IAAI,EAAEA,IAAI;UACVE,IAAI,EAAEA,IAAI;UACVC,QAAQ,EAAED,IAAI;UACdE,IAAI,EAAEvB,IAAI,CAACiB,GAAG,CAAC,CAACO;QACpB,CAAC,CAAC;MACN,CAAC,MAAM;QACHT,QAAQ,CAACJ,MAAM,CAACM,GAAG,EAAEjB,IAAI,CAACiB,GAAG,CAAC,CAAC;MACnC;IACJ;IAEAL,cAAc,CAACE,IAAI,GAAGC,QAAQ,CAAC,CAAC;EACpC;EAEI,IAAI;IACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC3B,GAAG,EAAEa,cAAc,CAAC;;IAEjD;IACA,IAAIa,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MACzBpB,OAAO,CAACqB,KAAK,CAAC,6CAA6C,CAAC;MAC5DC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,SAAS,CAAC,CAAE;MACnC,OAAO,CAAE;IACb;IACA,MAAMC,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAC1C,OAAO;MAAE,GAAGD,YAAY;MAAEE,WAAW,EAAET,QAAQ,CAACE;IAAM,CAAC;EAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}