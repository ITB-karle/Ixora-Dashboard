{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { onBeforeMount, onMounted, onBeforeUnmount, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from 'vue-router';\nimport { apiRequest } from '@/assets/js/apiRequest.js';\nimport setNavPills from \"@/assets/js/nav-pills.js\";\nimport setTooltip from \"@/assets/js/tooltip.js\";\nimport ArgonInput from \"@/components/ArgonInput.vue\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nimport FileInput from \"@/components/FileInput.vue\";\nimport BackButton from \"./components/BackButton.vue\";\nimport ErrorModal from \"./components/ErrorModal.vue\";\nimport SuccessModal from \"./components/SuccessModal.vue\";\nexport default {\n  __name: 'CreateReport',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const body = document.getElementsByTagName(\"body\")[0];\n    const store = useStore();\n    const router = useRouter();\n    onMounted(() => {\n      store.state.isAbsolute = true;\n      setNavPills();\n      setTooltip();\n      // Extract the UUID from the URL query parameters\n      const urlParams = new URLSearchParams(window.location.search);\n      const patient_uuid = urlParams.get('uuid');\n\n      // // Call getUserProfile function with the extracted UUID\n      // if (patient_uuid) {\n      //   getPatientDetails(patient_uuid);\n      // } else {\n      //     console.error('UUID not found in URL query parameters');\n      //     // Handle error\n      // };\n\n      form.value.patient_uuid = patient_uuid;\n    });\n    onBeforeMount(() => {\n      store.state.imageLayout = \"profile-overview\";\n      store.state.showNavbar = false;\n      store.state.showFooter = true;\n      store.state.hideConfigButton = true;\n      body.classList.add(\"profile-overview\");\n    });\n    onBeforeUnmount(() => {\n      store.state.isAbsolute = false;\n      store.state.imageLayout = \"default\";\n      store.state.showNavbar = true;\n      store.state.showFooter = true;\n      store.state.hideConfigButton = false;\n      body.classList.remove(\"profile-overview\");\n    });\n    const showErrorModal = ref(false);\n    const showSuccessModal = ref(false);\n    const errorMessage = ref('');\n    const successMessage = ref('');\n    const handleApiError = error => {\n      errorMessage.value = error.message || 'An unknown error occurred';\n      showErrorModal.value = true;\n    };\n    const handleApiSuccess = message => {\n      successMessage.value = message || 'Operation completed successfully';\n      showSuccessModal.value = true;\n    };\n    const goListPage = () => {\n      showSuccessModal.value = false;\n      router.push(`../edit-patient/?uuid=${form.value.patient_uuid}`);\n    };\n\n    // const patientProfile = ref('');\n    const form = ref({});\n    const createReport = async () => {\n      const data = {\n        patient_uuid: form.value.patient_uuid,\n        remark: form.value.remark,\n        image: form.value.imageF\n      };\n      try {\n        const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/patient_report/create`, data);\n        if (response.http_status < 300) {\n          handleApiSuccess('Report Created Successfully');\n        } else {\n          throw new Error(response.message);\n        }\n      } catch (error) {\n        handleApiError(error);\n      }\n    };\n    const __returned__ = {\n      body,\n      store,\n      router,\n      showErrorModal,\n      showSuccessModal,\n      errorMessage,\n      successMessage,\n      handleApiError,\n      handleApiSuccess,\n      goListPage,\n      form,\n      createReport,\n      onBeforeMount,\n      onMounted,\n      onBeforeUnmount,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get apiRequest() {\n        return apiRequest;\n      },\n      get setNavPills() {\n        return setNavPills;\n      },\n      get setTooltip() {\n        return setTooltip;\n      },\n      ArgonInput,\n      ArgonButton,\n      FileInput,\n      BackButton,\n      ErrorModal,\n      SuccessModal\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onBeforeMount","onMounted","onBeforeUnmount","ref","useStore","useRouter","apiRequest","setNavPills","setTooltip","ArgonInput","ArgonButton","FileInput","BackButton","ErrorModal","SuccessModal","body","document","getElementsByTagName","store","router","state","isAbsolute","urlParams","URLSearchParams","window","location","search","patient_uuid","get","form","value","imageLayout","showNavbar","showFooter","hideConfigButton","classList","add","remove","showErrorModal","showSuccessModal","errorMessage","successMessage","handleApiError","error","message","handleApiSuccess","goListPage","push","createReport","data","remark","image","imageF","response","http_status","Error"],"sources":["C:/Users/chink/Documents/GitHub/ixora-dashboard/src/views/CreateReport.vue"],"sourcesContent":["<script setup>\r\nimport { onBeforeMount, onMounted, onBeforeUnmount, ref, } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from 'vue-router';\r\nimport { apiRequest } from '@/assets/js/apiRequest.js'; \r\n\r\nimport setNavPills from \"@/assets/js/nav-pills.js\";\r\nimport setTooltip from \"@/assets/js/tooltip.js\";\r\nimport ArgonInput from \"@/components/ArgonInput.vue\";\r\nimport ArgonButton from \"@/components/ArgonButton.vue\";\r\nimport FileInput from\"@/components/FileInput.vue\";\r\nimport BackButton from \"./components/BackButton.vue\";\r\n\r\nimport ErrorModal from \"./components/ErrorModal.vue\";\r\nimport SuccessModal from \"./components/SuccessModal.vue\";\r\n\r\nconst body = document.getElementsByTagName(\"body\")[0];\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nonMounted(() => {\r\n  store.state.isAbsolute = true;\r\n  setNavPills();\r\n  setTooltip();\r\n  // Extract the UUID from the URL query parameters\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const patient_uuid = urlParams.get('uuid');\r\n  \r\n\r\n  // // Call getUserProfile function with the extracted UUID\r\n  // if (patient_uuid) {\r\n  //   getPatientDetails(patient_uuid);\r\n  // } else {\r\n  //     console.error('UUID not found in URL query parameters');\r\n  //     // Handle error\r\n  // };\r\n\r\n  form.value.patient_uuid = patient_uuid;\r\n\r\n});\r\n\r\nonBeforeMount(() => {\r\n  store.state.imageLayout = \"profile-overview\";\r\n  store.state.showNavbar = false;\r\n  store.state.showFooter = true;\r\n  store.state.hideConfigButton = true;\r\n  body.classList.add(\"profile-overview\");\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  store.state.isAbsolute = false;\r\n  store.state.imageLayout = \"default\";\r\n  store.state.showNavbar = true;\r\n  store.state.showFooter = true;\r\n  store.state.hideConfigButton = false;\r\n  body.classList.remove(\"profile-overview\");\r\n});\r\n\r\nconst showErrorModal = ref(false);\r\nconst showSuccessModal = ref(false);\r\nconst errorMessage = ref('');\r\nconst successMessage = ref('');\r\n\r\nconst handleApiError = (error) => {\r\n  errorMessage.value = error.message || 'An unknown error occurred';\r\n  showErrorModal.value = true;\r\n};\r\n\r\nconst handleApiSuccess = (message) => {\r\n  successMessage.value = message || 'Operation completed successfully';\r\n  showSuccessModal.value = true;\r\n};\r\n\r\nconst goListPage = () => {\r\n  showSuccessModal.value = false;\r\n  router.push(`../edit-patient/?uuid=${form.value.patient_uuid}`);\r\n};\r\n\r\n// const patientProfile = ref('');\r\nconst form = ref({});\r\n\r\nconst createReport= async () => {\r\n  const data = {\r\n    patient_uuid: form.value.patient_uuid,\r\n    remark: form.value.remark,\r\n    image: form.value.imageF,\r\n  };\r\n    \r\n  try {\r\n    const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/patient_report/create`, data);\r\n    if (response.http_status < 300) {\r\n      handleApiSuccess('Report Created Successfully');\r\n    } else {\r\n      throw new Error(response.message);\r\n    }\r\n  } catch (error) {\r\n    handleApiError(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n</script>\r\n<template>\r\n  <main>\r\n    <div class=\"container-fluid\">\r\n      <div\r\n        class=\"page-header min-height-300\"\r\n        style=\"\r\n          background-image: url(&quot;https://images.unsplash.com/photo-1531512073830-ba890ca4eba2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80&quot;);\r\n          margin-right: -24px;\r\n          margin-left: -34%;\r\n        \"\r\n      >\r\n        <span class=\"mask bg-gradient-success opacity-6\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"py-4 container-fluid shadow-lg mt-n8\">\r\n      <back-button class=\"position-relative mb-3\" />\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <form class=\"card\" @submit.prevent=\"createReport\">\r\n            <div class=\"card-header pb-0\">\r\n              <div class=\"d-flex align-items-center\">\r\n                 <p class=\"mb-0 text-primary font-weight-bolder\">Create Report</p>\r\n                <argon-button color=\"success\" size=\"sm\" class=\"ms-auto\" @click=\"createReminder\">\r\n                  Create\r\n                </argon-button>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"text-uppercase text-sm\">Report Information</p>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >UUID</label\r\n                  >\r\n                  <argon-input type=\"text\" v-model=\"form.patient_uuid\" disabled />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Remark</label\r\n                  >\r\n                  <argon-input type=\"text\" v-model=\"form.remark\" />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Image</label\r\n                  >\r\n                  <file-input v-model=\"form.imageF\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <error-modal :show-modal=\"showErrorModal\" :error-message=\"errorMessage\" @close=\"showErrorModal = false\" />\r\n    <success-modal :show-modal=\"showSuccessModal\" :success-message=\"successMessage\" @close=\"goListPage\" />\r\n  </main>\r\n</template>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}