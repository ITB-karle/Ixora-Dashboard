{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onBeforeMount, onMounted, onBeforeUnmount, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { apiRequest } from '@/assets/js/apiRequest.js';\nimport { useRouter } from \"vue-router\";\nimport setNavPills from \"@/assets/js/nav-pills.js\";\nimport setTooltip from \"@/assets/js/tooltip.js\";\nimport ArgonInput from \"@/components/ArgonInput.vue\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nimport BackButton from \"./components/BackButton.vue\";\nimport ErrorModal from \"./components/ErrorModal.vue\";\nimport SuccessModal from \"./components/SuccessModal.vue\";\nexport default {\n  __name: 'CreateUser',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const body = document.getElementsByTagName(\"body\")[0];\n    const store = useStore();\n    const router = useRouter();\n    const showErrorModal = ref(false);\n    const showSuccessModal = ref(false);\n    const errorMessage = ref('');\n    const successMessage = ref('');\n    const handleApiError = error => {\n      errorMessage.value = error.message || 'An unknown error occurred';\n      showErrorModal.value = true;\n    };\n    const handleApiSuccess = message => {\n      successMessage.value = message || 'Operation completed successfully';\n      showSuccessModal.value = true;\n    };\n    const goAccountManagement = () => {\n      showSuccessModal.value = false;\n      router.push('/account-management');\n    };\n    onMounted(() => {\n      store.state.isAbsolute = true;\n      setNavPills();\n      setTooltip();\n      getUserRole();\n      getBranchList();\n    });\n    onBeforeMount(() => {\n      store.state.imageLayout = \"profile-overview\";\n      store.state.showNavbar = false;\n      store.state.showFooter = true;\n      store.state.hideConfigButton = true;\n      body.classList.add(\"profile-overview\");\n    });\n    onBeforeUnmount(() => {\n      store.state.isAbsolute = false;\n      store.state.imageLayout = \"default\";\n      store.state.showNavbar = true;\n      store.state.showFooter = true;\n      store.state.hideConfigButton = false;\n      body.classList.remove(\"profile-overview\");\n    });\n    const user_role = ref('');\n    const getUserRole = async () => {\n      try {\n        const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/user_roles/list');\n        user_role.value = response.data;\n      } catch (error) {\n        handleApiError(error);\n      }\n    };\n    const branchs = ref('');\n    const getBranchList = async () => {\n      try {\n        const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/branch/list');\n        branchs.value = response.data;\n      } catch (error) {\n        handleApiError(error);\n      }\n    };\n    const form = ref({\n      username: '',\n      name: '',\n      password: '',\n      user_role: '',\n      branchs: ''\n    });\n    const submitForm = async () => {\n      const data = {\n        username: form.value.username,\n        name: form.value.name,\n        password: form.value.password,\n        email: form.value.email,\n        user_role: form.value.user_role,\n        branch_uuid: form.value.branchs\n      };\n      try {\n        const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/user/create', data);\n        if (response.http_status < 300) {\n          console.log('Form submitted successfully');\n          handleApiSuccess('User created successfully');\n        } else {\n          throw new Error(response.message);\n        }\n      } catch (error) {\n        handleApiError(error);\n        console.log(error);\n      }\n    };\n    const __returned__ = {\n      body,\n      store,\n      router,\n      showErrorModal,\n      showSuccessModal,\n      errorMessage,\n      successMessage,\n      handleApiError,\n      handleApiSuccess,\n      goAccountManagement,\n      user_role,\n      getUserRole,\n      branchs,\n      getBranchList,\n      form,\n      submitForm,\n      onBeforeMount,\n      onMounted,\n      onBeforeUnmount,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get apiRequest() {\n        return apiRequest;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get setNavPills() {\n        return setNavPills;\n      },\n      get setTooltip() {\n        return setTooltip;\n      },\n      ArgonInput,\n      ArgonButton,\n      BackButton,\n      ErrorModal,\n      SuccessModal\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onBeforeMount","onMounted","onBeforeUnmount","ref","useStore","apiRequest","useRouter","setNavPills","setTooltip","ArgonInput","ArgonButton","BackButton","ErrorModal","SuccessModal","body","document","getElementsByTagName","store","router","showErrorModal","showSuccessModal","errorMessage","successMessage","handleApiError","error","value","message","handleApiSuccess","goAccountManagement","push","state","isAbsolute","getUserRole","getBranchList","imageLayout","showNavbar","showFooter","hideConfigButton","classList","add","remove","user_role","response","data","branchs","form","username","name","password","submitForm","email","branch_uuid","http_status","console","log","Error"],"sources":["C:/Users/chink/Documents/GitHub/ixora-dashboard/src/views/CreateUser.vue"],"sourcesContent":["<script setup>\r\nimport { onBeforeMount, onMounted, onBeforeUnmount, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { apiRequest } from '@/assets/js/apiRequest.js';\r\nimport { useRouter } from \"vue-router\";\r\n\r\nimport setNavPills from \"@/assets/js/nav-pills.js\";\r\nimport setTooltip from \"@/assets/js/tooltip.js\";\r\n\r\nimport ArgonInput from \"@/components/ArgonInput.vue\";\r\nimport ArgonButton from \"@/components/ArgonButton.vue\";\r\nimport BackButton from \"./components/BackButton.vue\";\r\nimport ErrorModal from \"./components/ErrorModal.vue\";\r\nimport SuccessModal from \"./components/SuccessModal.vue\";\r\n\r\nconst body = document.getElementsByTagName(\"body\")[0];\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst showErrorModal = ref(false);\r\nconst showSuccessModal = ref(false);\r\nconst errorMessage = ref('');\r\nconst successMessage = ref('');\r\n\r\nconst handleApiError = (error) => {\r\n  errorMessage.value = error.message || 'An unknown error occurred';\r\n  showErrorModal.value = true;\r\n};\r\n\r\nconst handleApiSuccess = (message) => {\r\n  successMessage.value = message || 'Operation completed successfully';\r\n  showSuccessModal.value = true;\r\n};\r\n\r\nconst goAccountManagement = () => {\r\n  showSuccessModal.value = false;\r\n  router.push('/account-management');\r\n}\r\n\r\nonMounted(() => {\r\n  store.state.isAbsolute = true;\r\n  setNavPills();\r\n  setTooltip();\r\n  getUserRole();\r\n  getBranchList();\r\n});\r\n\r\nonBeforeMount(() => {\r\n  store.state.imageLayout = \"profile-overview\";\r\n  store.state.showNavbar = false;\r\n  store.state.showFooter = true;\r\n  store.state.hideConfigButton = true;\r\n  body.classList.add(\"profile-overview\");\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  store.state.isAbsolute = false;\r\n  store.state.imageLayout = \"default\";\r\n  store.state.showNavbar = true;\r\n  store.state.showFooter = true;\r\n  store.state.hideConfigButton = false;\r\n  body.classList.remove(\"profile-overview\");\r\n});\r\n\r\nconst user_role = ref('');\r\n\r\nconst getUserRole = async () => {\r\n  try {\r\n    const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/user_roles/list');\r\n    user_role.value = response.data;\r\n  } catch (error) {\r\n    handleApiError(error);\r\n  }\r\n};\r\n\r\nconst branchs = ref('');\r\nconst getBranchList = async () => {\r\n  try {\r\n    const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/branch/list');\r\n    branchs.value = response.data;\r\n  } catch (error) {\r\n    handleApiError(error);\r\n  }\r\n};\r\n\r\nconst form = ref({\r\n    username: '',\r\n    name: '',\r\n    password: '',\r\n    user_role: '',\r\n    branchs: '',\r\n});\r\n\r\nconst submitForm = async () => {\r\n  const data = {\r\n    username: form.value.username,\r\n    name: form.value.name,\r\n    password: form.value.password,\r\n    email: form.value.email,\r\n    user_role: form.value.user_role,\r\n    branch_uuid: form.value.branchs,\r\n  };\r\n    \r\n  try {\r\n    const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/user/create', data);\r\n    if (response.http_status < 300) {\r\n      console.log('Form submitted successfully');\r\n      handleApiSuccess('User created successfully');\r\n    } else {\r\n      throw new Error(response.message);\r\n    }\r\n  } catch (error) {\r\n    handleApiError(error);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n</script>\r\n<template>\r\n  <main>\r\n    <div class=\"container-fluid\">\r\n      <div\r\n        class=\"page-header min-height-300\"\r\n        style=\"\r\n          background-image: url(&quot;https://images.unsplash.com/photo-1531512073830-ba890ca4eba2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80&quot;);\r\n          margin-right: -24px;\r\n          margin-left: -34%;\r\n        \"\r\n      >\r\n        <span class=\"mask bg-gradient-success opacity-6\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"py-4 container-fluid mt-n8\">\r\n      <back-button class=\"position-relative mb-3\" />\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <form class=\"card\" @submit.prevent=\"submitForm\">\r\n            <div class=\"card-header pb-0\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <p class=\"mb-0\">Create User</p>\r\n                <argon-button color=\"success\" size=\"sm\" class=\"ms-auto\"\r\n                  >Create</argon-button\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"text-uppercase text-sm\">User Information</p>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Name</label\r\n                  >\r\n                  <argon-input v-model=\"form.name\" type=\"text\" required/>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Username</label\r\n                  >\r\n                  <argon-input type=\"text\" v-model=\"form.username\" required/>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Email address</label\r\n                  >\r\n                  <argon-input type=\"email\" v-model=\"form.email\" required/>\r\n                </div>\r\n                \r\n                <div class=\"col-md-6\">\r\n                  <label class=\"form-control-label\" \r\n                    >Password</label\r\n                  >\r\n                  <argon-input type=\"password\" v-model=\"form.password\" required/>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label class=\"form-control-label\"\r\n                    >User role</label\r\n                  >\r\n                  <select class=\"form-select\" v-model=\"form.user_role\" required>\r\n                    <option value=\"\" :selected=\"user_role === ''\">Please select a role</option>\r\n                    <option v-for=\"(role, index) in user_role\" :key=\"index\" :value=\"role\">{{ role }}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label class=\"form-control-label\"\r\n                    >Branch</label\r\n                  >\r\n                  <select class=\"form-select\" v-model=\"form.branchs\" required>\r\n                    <option value=\"\" :selected=\"branchs === ''\">Please select a branch</option>\r\n                    <option v-for=\"(branch, index) in branchs\" :key=\"index\" :value=\"branch.uuid\">{{ branch.branch_name }}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <error-modal :show-modal=\"showErrorModal\" :error-message=\"errorMessage\" @close=\"showErrorModal = false\" />\r\n    <success-modal :show-modal=\"showSuccessModal\" :success-message=\"successMessage\" @close=\"goAccountManagement\" />\r\n  </main>\r\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}