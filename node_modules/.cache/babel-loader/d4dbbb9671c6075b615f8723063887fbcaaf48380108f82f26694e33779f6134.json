{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  class: \"py-4 container-fluid\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_5 = {\n  class: \"card-header pb-0\"\n};\nconst _hoisted_6 = {\n  class: \"d-flex align-items-center\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"mb-0 text-primary font-weight-bolder\"\n}, \"Push Notification\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"card-body\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-uppercase text-sm\"\n}, \"Notification Information\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"row\"\n};\nconst _hoisted_11 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"example-text-input\",\n  class: \"form-control-label\"\n}, \"Heading\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"example-text-input\",\n  class: \"form-control-label\"\n}, \"Send to\", -1 /* HOISTED */);\nconst _hoisted_15 = {\n  key: 0\n};\nconst _hoisted_16 = {\n  key: 1\n};\nconst _hoisted_17 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"col-md-6\"\n};\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"example-text-input\",\n  class: \"form-control-label\"\n}, \"Receiver UUID\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"form\", {\n    class: \"card\",\n    onSubmit: _withModifiers($setup.pushNotification, [\"prevent\"])\n  }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createVNode($setup[\"ArgonButton\"], {\n    color: \"success\",\n    size: \"sm\",\n    class: \"ms-auto\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Push \")]),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createVNode($setup[\"ArgonInput\"], {\n    type: \"text\",\n    modelValue: $setup.form.headings,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.headings = $event),\n    required: \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createVNode($setup[\"ArgonSwitch\"], {\n    id: \"sent\",\n    name: \"Send to\",\n    title: $setup.is_All,\n    \"onUpdate:title\": _cache[1] || (_cache[1] = $event => $setup.is_All = $event)\n  }, {\n    default: _withCtx(() => [$setup.is_All == true ? (_openBlock(), _createElementBlock(\"span\", _hoisted_15, \"Everyone\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_16, \"Selected Users\"))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\"])]), _createElementVNode(\"div\", _hoisted_17, [_createVNode($setup[\"ArgonTextarea\"], {\n    rows: 8,\n    type: \"text\",\n    title: $setup.form.message,\n    \"onUpdate:title\": _cache[2] || (_cache[2] = $event => $setup.form.message = $event),\n    required: \"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Message \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\"])]), $setup.is_All == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_hoisted_19, _createVNode($setup[\"Multiselect\"], {\n    modelValue: $setup.selectUser,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.selectUser = $event),\n    options: $setup.options,\n    label: \"name\",\n    \"track-by\": \"uuid\",\n    placeholder: \"Select users\",\n    \"close-on-select\": false,\n    multiple: true\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])])) : _createCommentVNode(\"v-if\", true)])])], 32 /* NEED_HYDRATION */)])])]), _createVNode($setup[\"ErrorModal\"], {\n    \"show-modal\": $setup.showErrorModal,\n    \"error-message\": $setup.errorMessage,\n    onClose: _cache[4] || (_cache[4] = $event => $setup.showErrorModal = false)\n  }, null, 8 /* PROPS */, [\"show-modal\", \"error-message\"]), _createVNode($setup[\"SuccessModal\"], {\n    \"show-modal\": $setup.showSuccessModal,\n    \"success-message\": $setup.successMessage,\n    onClose: $setup.goListPage\n  }, null, 8 /* PROPS */, [\"show-modal\", \"success-message\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_withModifiers","$setup","pushNotification","_hoisted_5","_hoisted_6","_hoisted_7","_createVNode","color","size","default","_withCtx","_createTextVNode","_","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","type","modelValue","form","headings","_cache","$event","required","_hoisted_13","_hoisted_14","id","name","title","is_All","_hoisted_15","_hoisted_16","_hoisted_17","rows","message","_hoisted_18","_hoisted_19","selectUser","options","label","placeholder","multiple","_createCommentVNode","showErrorModal","errorMessage","onClose","showSuccessModal","successMessage","goListPage"],"sources":["C:\\Users\\chink\\Documents\\GitHub\\ixora-dashboard\\src\\views\\CreateNotification.vue"],"sourcesContent":["<script setup>\r\nimport { onMounted, ref, computed } from \"vue\";\r\nimport { apiRequest } from '@/assets/js/apiRequest.js';\r\nimport { useRouter } from 'vue-router';\r\n\r\nimport ArgonInput from \"@/components/ArgonInput.vue\";\r\nimport ArgonTextarea from \"@/components/ArgonTextarea.vue\";\r\nimport ArgonButton from \"@/components/ArgonButton.vue\";\r\nimport ArgonSwitch from \"@/components/ArgonSwitch.vue\";\r\nimport Multiselect from 'vue-multiselect';\r\n\r\nimport ErrorModal from \"./components/ErrorModal.vue\";\r\nimport SuccessModal from \"./components/SuccessModal.vue\";\r\n\r\n\r\n\r\nconst router = useRouter();\r\nvar is_All = ref(true);\r\nconst selectUser = ref([]);\r\n// const options = ref([]);    \r\n\r\nonMounted(() => {\r\n  getMemberList();\r\n});\r\n\r\n\r\n\r\nconst showErrorModal = ref(false);\r\nconst showSuccessModal = ref(false);\r\nconst errorMessage = ref('');\r\nconst successMessage = ref('');\r\n\r\nconst handleApiError = (error) => {\r\n  errorMessage.value = error.message || 'An unknown error occurred';\r\n  showErrorModal.value = true;\r\n};\r\n\r\nconst handleApiSuccess = (message) => {\r\n  successMessage.value = message || 'Operation completed successfully';\r\n  showSuccessModal.value = true;\r\n};\r\n\r\nconst goListPage= () => {\r\n  showSuccessModal.value = false;\r\n  router.go();\r\n};\r\n\r\n// const userList = ref([]);\r\nconst optionsPatient = ref([]);\r\nconst optionsDoctor = ref([]);\r\nconst optionsCS = ref([]);\r\nconst getMemberList = async () => {\r\n  try {\r\n    const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/user/list');\r\n    const patients = response.data.patients;\r\n    optionsPatient.value = patients.map(patient => ({\r\n      name: patient.name,\r\n      uuid: patient.uuid\r\n    }));\r\n    const doctors = response.data.doctors;\r\n    optionsDoctor.value = doctors.map(doctor => ({\r\n      name: doctor.name,\r\n      uuid: doctor.uuid\r\n    }));\r\n    const css = response.data.customer_service;\r\n    optionsCS.value = css.map(cs => ({\r\n      name: cs.name,\r\n      uuid: cs.uuid\r\n    }));\r\n  } catch (error) {\r\n    console.error('Failed to fetch member list:', error);\r\n  }\r\n};                          \r\n\r\nconst options = computed(() => [...optionsPatient.value, ...optionsDoctor.value, ...optionsCS.value]);\r\n\r\nconst form = ref({});\r\n\r\nconst pushNotification = async () => {\r\n  const data = {\r\n    headings: form.value.headings,\r\n    message: form.value.message,\r\n  };\r\n  if (is_All.value) {  \r\n    try {\r\n      const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/pushNotification/all`, data);\r\n\r\n      if (response.http_status < 300) {\r\n        handleApiSuccess('Notification pushed successfully');\r\n      } else {\r\n        throw new Error(response.message);\r\n      }\r\n    } catch (error) {\r\n      handleApiError(error);\r\n    }\r\n  } else {\r\n    if (selectUser.value.length > 0) {\r\n      selectUser.value.forEach((user, index) => {\r\n        data[`external_id[${index}]`] = user.uuid;\r\n      });\r\n      console.log(selectUser.value.map(user => user.uuid));  // Logging the list of UUIDs\r\n\r\n      try {\r\n        const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/pushNotification/single`, data);\r\n\r\n        if (response.http_status < 300) {\r\n          handleApiSuccess('Notification pushed successfully');\r\n        } else {\r\n          throw new Error(response.message);\r\n        }\r\n      } catch (error) {\r\n        handleApiError(error);\r\n      }\r\n    } else {\r\n      console.error('No users selected');\r\n      handleApiError('No users selected');\r\n    }\r\n  }\r\n  \r\n};\r\n\r\n\r\n\r\n</script>\r\n<template>\r\n  <main class=\"container-fluid\">\r\n    <div class=\"py-4 container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <form class=\"card\" @submit.prevent=\"pushNotification\">\r\n            <div class=\"card-header pb-0\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <p class=\"mb-0 text-primary font-weight-bolder\">Push Notification</p>\r\n                <argon-button color=\"success\" size=\"sm\" class=\"ms-auto\">\r\n                  Push\r\n                </argon-button>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"text-uppercase text-sm\">Notification Information</p>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Heading</label\r\n                  >\r\n                  <argon-input type=\"text\" v-model=\"form.headings\" required/>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Send to</label\r\n                  >\r\n                  <argon-switch id=\"sent\" name=\"Send to\" v-model:title=\"is_All\">\r\n                    <span v-if=\"is_All == true\">Everyone</span>\r\n                    <span v-else>Selected Users</span>\r\n                  </argon-switch>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <argon-textarea :rows=\"8\" type=\"text\" v-model:title=\"form.message\" required>\r\n                    Message\r\n                  </argon-textarea>\r\n                </div>\r\n                <div class=\"col-md-6\" v-if=\"is_All == false\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Receiver UUID</label\r\n                  >\r\n                  <multiselect v-model=\"selectUser\" :options=\"options\" label=\"name\" track-by=\"uuid\" placeholder=\"Select users\"\r\n                  :close-on-select=\"false\" :multiple=\"true\"></multiselect>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <error-modal :show-modal=\"showErrorModal\" :error-message=\"errorMessage\" @close=\"showErrorModal = false\" />\r\n    <success-modal :show-modal=\"showSuccessModal\" :success-message=\"successMessage\" @close=\"goListPage\" />\r\n  </main>\r\n</template>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}