{"ast":null,"code":"import { onBeforeMount, onMounted, onBeforeUnmount, ref, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { apiRequest } from '@/assets/js/apiRequest.js';\nimport setNavPills from \"@/assets/js/nav-pills.js\";\nimport setTooltip from \"@/assets/js/tooltip.js\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nconst perPage = 10; // Assuming 10 patients per page\n\n/// Function to calculate the total number of pages\n\nexport default {\n  __name: 'NotificationList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const body = document.getElementsByTagName(\"body\")[0];\n    const store = useStore();\n    onMounted(() => {\n      store.state.isAbsolute = true;\n      setNavPills();\n      setTooltip();\n      getNotificationList();\n      // Extract the UUID from the URL query parameters\n      // const urlParams = new URLSearchParams(window.location.search);\n      // const patient_uuid = urlParams.get('uuid');\n\n      // if (patient_uuid) {\n      //   getPatientDetails(patient_uuid);\n      //   getVitalSignsList(patient_uuid);\n      // } else {\n      //     console.error('UUID not found in URL query parameters');\n      // };\n    });\n    onBeforeMount(() => {\n      store.state.imageLayout = \"profile-overview\";\n      store.state.showNavbar = false;\n      store.state.showFooter = true;\n      store.state.hideConfigButton = true;\n      body.classList.add(\"profile-overview\");\n    });\n    onBeforeUnmount(() => {\n      store.state.isAbsolute = false;\n      store.state.imageLayout = \"default\";\n      store.state.showNavbar = true;\n      store.state.showFooter = true;\n      store.state.hideConfigButton = false;\n      body.classList.remove(\"profile-overview\");\n    });\n    const notification = ref([]);\n    // const form = ref({});\n    // const receiver = ref([]);\n    // const reminders = ref([]);\n    // const introduction = ref([]);\n    // const reports = ref([]);\n\n    const getNotificationList = async () => {\n      try {\n        // Make API call to authenticate user\n        // Example using axios:\n        const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/notifications/fullList?search&new&status&paginate&per_page`);\n        notification.value = response.data;\n        // form.value = { ...response.data.profile };\n        // receiver.value = response.data.receiver_uuid;\n        // reminders.value = response.data.reminders;\n        // introduction.value = response.data.introductions;\n        // reports.value = response.data.reports;\n      } catch (error) {\n        console.error('Get Data Failed', error);\n        // Handle login error\n      }\n    };\n    const currentPage = ref(1);\n    const totalPages = computed(() => Math.ceil(notification.value.length / perPage));\n\n    // Function to get the subset of patients to display on the current page\n    const notificationDisplay = computed(() => {\n      const startIndex = (currentPage.value - 1) * perPage;\n      const endIndex = startIndex + perPage;\n      return notification.value.slice(startIndex, endIndex);\n    });\n\n    // Function to navigate to a specific page\n    const goToPage = page => {\n      currentPage.value = page;\n    };\n\n    // Function to navigate to the next page\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n\n    // Function to navigate to the previous page\n    const prevPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n    const __returned__ = {\n      body,\n      store,\n      notification,\n      getNotificationList,\n      currentPage,\n      perPage,\n      totalPages,\n      notificationDisplay,\n      goToPage,\n      nextPage,\n      prevPage,\n      onBeforeMount,\n      onMounted,\n      onBeforeUnmount,\n      ref,\n      computed,\n      get useStore() {\n        return useStore;\n      },\n      get apiRequest() {\n        return apiRequest;\n      },\n      get setNavPills() {\n        return setNavPills;\n      },\n      get setTooltip() {\n        return setTooltip;\n      },\n      ArgonButton\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onBeforeMount","onMounted","onBeforeUnmount","ref","computed","useStore","apiRequest","setNavPills","setTooltip","ArgonButton","perPage","body","document","getElementsByTagName","store","state","isAbsolute","getNotificationList","imageLayout","showNavbar","showFooter","hideConfigButton","classList","add","remove","notification","response","value","data","error","console","currentPage","totalPages","Math","ceil","length","notificationDisplay","startIndex","endIndex","slice","goToPage","page","nextPage","prevPage"],"sources":["C:/Users/chink/Documents/GitHub/ixora-dashboard/src/views/NotificationList.vue"],"sourcesContent":["<script setup>\r\nimport { onBeforeMount, onMounted, onBeforeUnmount, ref, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { apiRequest } from '@/assets/js/apiRequest.js'; \r\n\r\nimport setNavPills from \"@/assets/js/nav-pills.js\";\r\nimport setTooltip from \"@/assets/js/tooltip.js\";\r\nimport ArgonButton from \"@/components/ArgonButton.vue\";\r\n\r\nconst body = document.getElementsByTagName(\"body\")[0];\r\n\r\nconst store = useStore();\r\n\r\nonMounted(() => {\r\n  store.state.isAbsolute = true;\r\n  setNavPills();\r\n  setTooltip();\r\n  getNotificationList();\r\n  // Extract the UUID from the URL query parameters\r\n  // const urlParams = new URLSearchParams(window.location.search);\r\n  // const patient_uuid = urlParams.get('uuid');\r\n\r\n  // if (patient_uuid) {\r\n  //   getPatientDetails(patient_uuid);\r\n  //   getVitalSignsList(patient_uuid);\r\n  // } else {\r\n  //     console.error('UUID not found in URL query parameters');\r\n  // };\r\n\r\n});\r\nonBeforeMount(() => {\r\n  store.state.imageLayout = \"profile-overview\";\r\n  store.state.showNavbar = false;\r\n  store.state.showFooter = true;\r\n  store.state.hideConfigButton = true;\r\n  body.classList.add(\"profile-overview\");\r\n});\r\nonBeforeUnmount(() => {\r\n  store.state.isAbsolute = false;\r\n  store.state.imageLayout = \"default\";\r\n  store.state.showNavbar = true;\r\n  store.state.showFooter = true;\r\n  store.state.hideConfigButton = false;\r\n  body.classList.remove(\"profile-overview\");\r\n});\r\n\r\n\r\nconst notification = ref([]);\r\n// const form = ref({});\r\n// const receiver = ref([]);\r\n// const reminders = ref([]);\r\n// const introduction = ref([]);\r\n// const reports = ref([]);\r\n\r\nconst getNotificationList = async () => {\r\n  try {\r\n    // Make API call to authenticate user\r\n    // Example using axios:\r\n    const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/notifications/fullList?search&new&status&paginate&per_page`);\r\n    notification.value = response.data;\r\n    // form.value = { ...response.data.profile };\r\n    // receiver.value = response.data.receiver_uuid;\r\n    // reminders.value = response.data.reminders;\r\n    // introduction.value = response.data.introductions;\r\n    // reports.value = response.data.reports;\r\n  } catch (error) {\r\n    console.error('Get Data Failed', error);\r\n    // Handle login error\r\n  }\r\n};\r\n\r\nconst currentPage = ref(1);\r\n\r\nconst perPage = 10; // Assuming 10 patients per page\r\n\r\n\r\n/// Function to calculate the total number of pages\r\nconst totalPages = computed(() => Math.ceil(notification.value.length / perPage));\r\n\r\n// Function to get the subset of patients to display on the current page\r\nconst notificationDisplay = computed(() => {\r\n  const startIndex = (currentPage.value - 1) * perPage;\r\n  const endIndex = startIndex + perPage;\r\n  return notification.value.slice(startIndex, endIndex);\r\n});\r\n\r\n\r\n\r\n// Function to navigate to a specific page\r\nconst goToPage = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// Function to navigate to the next page\r\nconst nextPage = () => {\r\n  if (currentPage.value < totalPages.value) {\r\n    currentPage.value++;\r\n  }\r\n};\r\n\r\n\r\n// Function to navigate to the previous page\r\nconst prevPage = () => {\r\n  if (currentPage.value > 1) {\r\n    currentPage.value--;\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n<template>\r\n  <main>\r\n    <div class=\"container-fluid\">\r\n      <div\r\n        class=\"page-header min-height-300\"\r\n        style=\"\r\n          background-image: url(&quot;https://images.unsplash.com/photo-1531512073830-ba890ca4eba2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80&quot;);\r\n          margin-right: -24px;\r\n          margin-left: -34%;\r\n        \"\r\n      >\r\n        <span class=\"mask bg-gradient-warning opacity-6\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"py-4 container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 mt-n5\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header pb-0\">\r\n              <div class=\"d-flex align-items-center justify-content-between\">\r\n                <p class=\"mb-0 text-primary font-weight-bolder\">Notification List</p>\r\n                <a\r\n                  :href=\"`../create-notification`\"\r\n                >\r\n                  <argon-button >Add</argon-button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body px-0 pt-0 pb-2\">\r\n              <div class=\"table-responsive p-0\">\r\n                <table class=\"table align-items-center mb-0\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th\r\n                        class=\"text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\"\r\n                      >\r\n                        ID\r\n                      </th>\r\n                      <th\r\n                        class=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\"\r\n                      >\r\n                        Receiver Name\r\n                      </th>\r\n                      <!-- <th\r\n                        class=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\"\r\n                      >\r\n                        Media\r\n                      </th> -->\r\n                      <!-- <th\r\n                        class=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\"\r\n                      >\r\n                        Text\r\n                      </th> -->\r\n                      <th\r\n                        class=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\"\r\n                      >\r\n                        Title\r\n                      </th>\r\n                      <th\r\n                        class=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\"\r\n                      >\r\n                        Created At\r\n                      </th>\r\n                      <!-- <th class=\"text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7\">Edit</th> -->\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"(notification, index) in notificationDisplay\" :key=\"index\">\r\n                      <td>\r\n                        <div class=\"d-flex px-2 py-1\">\r\n                          <div>\r\n                            <!-- <img\r\n                              src=\"../../assets/img/team-2.jpg\"\r\n                              class=\"avatar avatar-sm me-3\"\r\n                              alt=\"user1\"\r\n                            /> -->\r\n                          </div>\r\n                          <div class=\"d-flex flex-column justify-content-center\">\r\n                            <h6 class=\"badge badge-sm bg-gradient-primary mb-0\">{{ notification.uniqId }}</h6>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td v-if=\"notification.receiver_uuid\" class=\"align-middle text-center text-sm\">\r\n                        <span class=\"text-secondary text-xs font-weight-bold\">{{ notification.receiver_uuid.name }}</span>\r\n                      </td>\r\n                      <td v-else class=\"align-middle text-center text-sm\">\r\n                        <span class=\"badge badge-sm bg-gradient-danger\">All</span>\r\n                      </td>\r\n                      <!-- <td class=\"align-middle text-center text-sm\">\r\n                        <img\r\n                          :src=\"forum.media\"\r\n                          class=\"avatar avatar-sm me-3\"\r\n                          alt=\"user1\"\r\n                        />\r\n                      </td> -->\r\n                      <td class=\"align-middle text-center text-sm\">\r\n                        <span class=\"text-secondary text-xs font-weight-bold\">{{ notification.title }}</span>\r\n                      </td>\r\n                      <!-- <td class=\"align-middle text-center\">\r\n                        <span class=\"text-secondary text-xs font-weight-bold\"\r\n                          >{{ notification.description }}</span\r\n                        >\r\n                      </td> -->\r\n                      <td class=\"align-middle text-center\">\r\n                        <span class=\"text-secondary text-xs font-weight-bold\"\r\n                          >{{ notification.created_at }}</span\r\n                        >\r\n                      </td>\r\n                      <!-- <td class=\"align-middle text-center\">\r\n                        <a\r\n                          :href=\"`../edit-notification/?uuid=${notification.uuid}`\"\r\n                          class=\"text-secondary font-weight-bold text-xs\"\r\n                          data-toggle=\"tooltip\"\r\n                          data-original-title=\"Edit user\"\r\n                          >\r\n                          <argon-button color=\"light\">\r\n                            <i class=\"fas fa-pen\"></i>\r\n                          </argon-button>\r\n                        </a>\r\n                      </td> -->\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <nav aria-label=\"Page navigation example\" class=\"my-3\">\r\n                  <ul class=\"pagination justify-content-center\">\r\n                    <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\r\n                      <a class=\"page-link\" tabindex=\"-1\" @click=\"prevPage\">\r\n                        <i class=\"fa fa-angle-left\"></i>\r\n                        <span class=\"sr-only\">Previous</span>\r\n                      </a>\r\n                    </li>\r\n                    <li v-for=\"page in totalPages\" :key=\"page\" class=\"page-item\" :class=\"{ active: page === currentPage }\">\r\n                      <a class=\"page-link\" @click=\"goToPage(page)\">{{ page }}</a>\r\n                    </li>\r\n                    <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\r\n                      <a class=\"page-link\" @click=\"nextPage\">\r\n                        <i class=\"fa fa-angle-right\"></i>\r\n                        <span class=\"sr-only\">Next</span>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}