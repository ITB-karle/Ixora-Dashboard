{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { onBeforeMount, onMounted, onBeforeUnmount, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from 'vue-router';\nimport { apiRequest } from '@/assets/js/apiRequest.js';\nimport setNavPills from \"@/assets/js/nav-pills.js\";\nimport setTooltip from \"@/assets/js/tooltip.js\";\nimport ArgonInput from \"@/components/ArgonInput.vue\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nimport BackButton from \"./components/BackButton.vue\";\nimport ErrorModal from \"./components/ErrorModal.vue\";\nimport SuccessModal from \"./components/SuccessModal.vue\";\nexport default {\n  __name: 'EditMedication',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const body = document.getElementsByTagName(\"body\")[0];\n    const store = useStore();\n    const router = useRouter();\n    onMounted(() => {\n      store.state.isAbsolute = true;\n      setNavPills();\n      setTooltip();\n      // Extract the UUID from the URL query parameters\n      const urlParams = new URLSearchParams(window.location.search);\n      const uuid = urlParams.get('uuid');\n\n      // Call getUserProfile function with the extracted UUID\n      if (uuid) {\n        getMedicationDetails(uuid);\n      } else {\n        console.error('UUID not found in URL query parameters');\n        // Handle error\n      }\n      ;\n      form.value.uuid = uuid;\n    });\n    onBeforeMount(() => {\n      store.state.imageLayout = \"profile-overview\";\n      store.state.showNavbar = false;\n      store.state.showFooter = true;\n      store.state.hideConfigButton = true;\n      body.classList.add(\"profile-overview\");\n    });\n    onBeforeUnmount(() => {\n      store.state.isAbsolute = false;\n      store.state.imageLayout = \"default\";\n      store.state.showNavbar = true;\n      store.state.showFooter = true;\n      store.state.hideConfigButton = false;\n      body.classList.remove(\"profile-overview\");\n    });\n    const showErrorModal = ref(false);\n    const showSuccessModal = ref(false);\n    const errorMessage = ref('');\n    const successMessage = ref('');\n    const handleApiError = error => {\n      errorMessage.value = error.message || 'An unknown error occurred';\n      showErrorModal.value = true;\n    };\n    const handleApiSuccess = message => {\n      successMessage.value = message || 'Operation completed successfully';\n      showSuccessModal.value = true;\n    };\n    const goListPage = () => {\n      showSuccessModal.value = false;\n      router.go();\n    };\n    const medicationDetails = ref({});\n    const form = ref({});\n    const getMedicationDetails = async uuid => {\n      try {\n        // Make API call to authenticate user\n        // Example using axios:\n        const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/patient_medication_record/${uuid}/edit`);\n        medicationDetails.value = response.data;\n        form.value = {\n          ...response.data\n        };\n      } catch (error) {\n        console.error('Get Data Failed:', error);\n        // Handle login error\n      }\n    };\n    const updateMedication = async () => {\n      const data = {\n        uuid: form.value.uuid,\n        medication_name: form.value.medication_name,\n        unit: form.value.unit,\n        restock_date: form.value.restock_date,\n        inventory: form.value.inventory,\n        dosing: form.value.dosing,\n        frequency: form.value.frequency,\n        restock_amount: form.value.restock_amount,\n        record_type: form.value.record_type\n      };\n      try {\n        const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/patient_medication_record/update`, data);\n        if (response.http_status < 300) {\n          handleApiSuccess('Medication Created Successfully');\n        } else {\n          throw new Error(response.message);\n        }\n      } catch (error) {\n        handleApiError(error);\n      }\n    };\n    const __returned__ = {\n      body,\n      store,\n      router,\n      showErrorModal,\n      showSuccessModal,\n      errorMessage,\n      successMessage,\n      handleApiError,\n      handleApiSuccess,\n      goListPage,\n      medicationDetails,\n      form,\n      getMedicationDetails,\n      updateMedication,\n      onBeforeMount,\n      onMounted,\n      onBeforeUnmount,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get apiRequest() {\n        return apiRequest;\n      },\n      get setNavPills() {\n        return setNavPills;\n      },\n      get setTooltip() {\n        return setTooltip;\n      },\n      ArgonInput,\n      ArgonButton,\n      BackButton,\n      ErrorModal,\n      SuccessModal\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onBeforeMount","onMounted","onBeforeUnmount","ref","useStore","useRouter","apiRequest","setNavPills","setTooltip","ArgonInput","ArgonButton","BackButton","ErrorModal","SuccessModal","body","document","getElementsByTagName","store","router","state","isAbsolute","urlParams","URLSearchParams","window","location","search","uuid","get","getMedicationDetails","console","error","form","value","imageLayout","showNavbar","showFooter","hideConfigButton","classList","add","remove","showErrorModal","showSuccessModal","errorMessage","successMessage","handleApiError","message","handleApiSuccess","goListPage","go","medicationDetails","response","data","updateMedication","medication_name","unit","restock_date","inventory","dosing","frequency","restock_amount","record_type","http_status","Error"],"sources":["C:/Users/chink/Documents/GitHub/ixora-dashboard/src/views/EditMedication.vue"],"sourcesContent":["<script setup>\r\nimport { onBeforeMount, onMounted, onBeforeUnmount, ref, } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from 'vue-router';\r\nimport { apiRequest } from '@/assets/js/apiRequest.js'; \r\n\r\nimport setNavPills from \"@/assets/js/nav-pills.js\";\r\nimport setTooltip from \"@/assets/js/tooltip.js\";\r\nimport ArgonInput from \"@/components/ArgonInput.vue\";\r\nimport ArgonButton from \"@/components/ArgonButton.vue\";\r\nimport BackButton from \"./components/BackButton.vue\";\r\n\r\nimport ErrorModal from \"./components/ErrorModal.vue\";\r\nimport SuccessModal from \"./components/SuccessModal.vue\";\r\n\r\nconst body = document.getElementsByTagName(\"body\")[0];\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nonMounted(() => {\r\n  store.state.isAbsolute = true;\r\n  setNavPills();\r\n  setTooltip();\r\n  // Extract the UUID from the URL query parameters\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const uuid = urlParams.get('uuid');\r\n  \r\n\r\n  // Call getUserProfile function with the extracted UUID\r\n  if (uuid) {\r\n    getMedicationDetails(uuid);\r\n  } else {\r\n      console.error('UUID not found in URL query parameters');\r\n      // Handle error\r\n  };\r\n\r\n  form.value.uuid = uuid;\r\n\r\n});\r\nonBeforeMount(() => {\r\n  store.state.imageLayout = \"profile-overview\";\r\n  store.state.showNavbar = false;\r\n  store.state.showFooter = true;\r\n  store.state.hideConfigButton = true;\r\n  body.classList.add(\"profile-overview\");\r\n});\r\nonBeforeUnmount(() => {\r\n  store.state.isAbsolute = false;\r\n  store.state.imageLayout = \"default\";\r\n  store.state.showNavbar = true;\r\n  store.state.showFooter = true;\r\n  store.state.hideConfigButton = false;\r\n  body.classList.remove(\"profile-overview\");\r\n});\r\n\r\nconst showErrorModal = ref(false);\r\nconst showSuccessModal = ref(false);\r\nconst errorMessage = ref('');\r\nconst successMessage = ref('');\r\n\r\nconst handleApiError = (error) => {\r\n  errorMessage.value = error.message || 'An unknown error occurred';\r\n  showErrorModal.value = true;\r\n};\r\n\r\nconst handleApiSuccess = (message) => {\r\n  successMessage.value = message || 'Operation completed successfully';\r\n  showSuccessModal.value = true;\r\n};\r\n\r\nconst goListPage = () => {\r\n  showSuccessModal.value = false;\r\n  router.go();\r\n};\r\n\r\n\r\nconst medicationDetails = ref({});\r\nconst form = ref({});\r\n\r\nconst getMedicationDetails = async (uuid) => {\r\n  try {\r\n    // Make API call to authenticate user\r\n    // Example using axios:\r\n    const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/patient_medication_record/${ uuid }/edit`);\r\n    medicationDetails.value = response.data;\r\n    form.value = { ...response.data };\r\n  } catch (error) {\r\n    console.error('Get Data Failed:', error);\r\n    // Handle login error\r\n  }\r\n};\r\n\r\n\r\nconst updateMedication = async () => {\r\n  const data = {\r\n    uuid: form.value.uuid,\r\n    medication_name: form.value.medication_name,\r\n    unit: form.value.unit,\r\n    restock_date: form.value.restock_date,\r\n    inventory: form.value.inventory,\r\n    dosing: form.value.dosing,\r\n    frequency: form.value.frequency,\r\n    restock_amount: form.value.restock_amount,\r\n    record_type: form.value.record_type,\r\n  };\r\n    \r\n  try {\r\n    const response = await apiRequest(`https://staging.itbrightsolution.com/ixora_backend/public/api/v1/patient_medication_record/update`, data);\r\n\r\n    if (response.http_status < 300) {\r\n      handleApiSuccess('Medication Created Successfully');\r\n    } else {\r\n      throw new Error(response.message);\r\n    }\r\n  } catch (error) {\r\n    handleApiError(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n</script>\r\n<template>\r\n  <main>\r\n    <div class=\"container-fluid\">\r\n      <div\r\n        class=\"page-header min-height-300\"\r\n        style=\"\r\n          background-image: url(&quot;https://images.unsplash.com/photo-1531512073830-ba890ca4eba2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80&quot;);\r\n          margin-right: -24px;\r\n          margin-left: -34%;\r\n        \"\r\n      >\r\n        <span class=\"mask bg-gradient-success opacity-6\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"py-4 container-fluid shadow-lg mt-n8\">\r\n      <back-button class=\"position-relative mb-3\" />\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <form class=\"card\" @submit.prevent=\"updateMedication\">\r\n            <div class=\"card-header pb-0\">\r\n              <div class=\"d-flex align-items-center\">\r\n                 <p class=\"mb-0 text-primary font-weight-bolder\">Edit Medication</p>\r\n                <argon-button color=\"warning\" size=\"sm\" class=\"ms-auto\">\r\n                  Update\r\n                </argon-button>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"text-uppercase text-sm\">Medication Information</p>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >UUID</label\r\n                  >\r\n                  <argon-input type=\"text\" v-model=\"form.uuid\" disabled />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Medication Name</label\r\n                  >\r\n                  <argon-input type=\"text\" v-model=\"form.medication_name\" required />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Unit (1=tablet, 2=capsule, 3=mL, 4=unit (injection))</label\r\n                  >\r\n                  <select class=\"form-select\" v-model=\"form.unit\" aria-label=\"Default select example\">\r\n                    <option :value=\"1\">Tablet</option>\r\n                    <option :value=\"2\">Capsule</option>\r\n                    <option :value=\"3\">mL</option>\r\n                    <option :value=\"4\">Unit</option>\r\n                  </select>\r\n                  <!-- <argon-input type=\"text\" v-model=\"form.unit\" /> -->\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Inventory</label\r\n                  >\r\n                  <argon-input type=\"number\" v-model=\"form.inventory\" required />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >dosing</label\r\n                  >\r\n                  <argon-input type=\"number\" v-model=\"form.dosing\" required />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Frequency</label\r\n                  >\r\n                  <argon-input type=\"number\" v-model=\"form.frequency\" required />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Record Type (1=permanent,2=temporary)</label\r\n                  >\r\n                  <select class=\"form-select\" v-model=\"form.record_type\" aria-label=\"Default select example\">\r\n                    <option :value=\"0\">Please select type of medication</option>\r\n                    <option :value=\"1\">Permanent</option>\r\n                    <option :value=\"2\">Temporay</option>\r\n                  </select>\r\n                  <!-- <argon-input type=\"text\" v-model=\"form.record_type\" /> -->\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Routine</label\r\n                  >\r\n                  <argon-input type=\"number\" v-model=\"form.routine\" required />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Restock Date</label\r\n                  >\r\n                  <input class=\"form-control\" type=\"date\" v-model=\"form.restock_date\" required />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"example-text-input\" class=\"form-control-label\"\r\n                    >Restock Amount</label\r\n                  >\r\n                  <argon-input type=\"number\" v-model=\"form.restock_amount\" required />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <error-modal :show-modal=\"showErrorModal\" :error-message=\"errorMessage\" @close=\"showErrorModal = false\" />\r\n    <success-modal :show-modal=\"showSuccessModal\" :success-message=\"successMessage\" @close=\"goListPage\" />\r\n  </main>\r\n</template>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}