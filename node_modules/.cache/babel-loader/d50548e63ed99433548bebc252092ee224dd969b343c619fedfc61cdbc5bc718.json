{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onBeforeUnmount, onBeforeMount } from \"vue\";\nimport { useStore } from \"vuex\";\n// import Navbar from \"@/examples/PageLayout/Navbar.vue\";\nimport ArgonInput from \"@/components/ArgonInput.vue\";\n// import ArgonSwitch from \"@/components/ArgonSwitch.vue\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nimport { apiRequest } from '@/assets/js/apiRequest.js';\nimport ErrorModal from \"./components/ErrorModal.vue\";\nimport SuccessModal from \"./components/SuccessModal.vue\";\nimport IxoraImg from \"../assets/img/ixora_22.jpg\";\nimport { ref } from 'vue';\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Signin',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const body = document.getElementsByTagName(\"body\")[0];\n    const store = useStore();\n    onBeforeMount(() => {\n      store.state.hideConfigButton = true;\n      store.state.showNavbar = false;\n      store.state.showSidenav = false;\n      store.state.showFooter = false;\n      body.classList.remove(\"bg-gray-100\");\n    });\n    onBeforeUnmount(() => {\n      store.state.hideConfigButton = false;\n      store.state.showNavbar = true;\n      store.state.showSidenav = true;\n      store.state.showFooter = true;\n      body.classList.add(\"bg-gray-100\");\n    });\n    const showErrorModal = ref(false);\n    const showSuccessModal = ref(false);\n    const errorMessage = ref('');\n    const successMessage = ref('');\n    const handleApiError = () => {\n      errorMessage.value = 'Username or Password Invalid';\n      showErrorModal.value = true;\n    };\n    const handleApiSuccess = message => {\n      successMessage.value = message || 'Operation completed successfully';\n      showSuccessModal.value = true;\n    };\n    const goListPage = () => {\n      showSuccessModal.value = false;\n      router.push('/account-management');\n    };\n    const username = ref('');\n    const password = ref('');\n    const loggedIn = ref(false);\n    const user = ref('');\n    const router = useRouter();\n    const login = async () => {\n      try {\n        // Make API call to authenticate user\n        // Example using axios:\n        const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/login', {\n          username: username.value,\n          password: password.value\n        }, 'POST', false);\n        loggedIn.value = true;\n        user.value = response;\n\n        // Assuming the response contains a token upon successful login\n        // Store the token in local storage\n        localStorage.setItem('access_token', response.data.access_token);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        localStorage.setItem('authentication', true);\n        // For demonstration, setting loggedIn to true\n\n        if (response.http_status < 300) {\n          handleApiSuccess('Login Successfully');\n        } else {\n          throw new Error(response.message);\n        }\n      } catch (error) {\n        handleApiError(error);\n      }\n    };\n    const __returned__ = {\n      body,\n      store,\n      showErrorModal,\n      showSuccessModal,\n      errorMessage,\n      successMessage,\n      handleApiError,\n      handleApiSuccess,\n      goListPage,\n      username,\n      password,\n      loggedIn,\n      user,\n      router,\n      login,\n      onBeforeUnmount,\n      onBeforeMount,\n      get useStore() {\n        return useStore;\n      },\n      ArgonInput,\n      ArgonButton,\n      get apiRequest() {\n        return apiRequest;\n      },\n      ErrorModal,\n      SuccessModal,\n      get IxoraImg() {\n        return IxoraImg;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onBeforeUnmount","onBeforeMount","useStore","ArgonInput","ArgonButton","apiRequest","ErrorModal","SuccessModal","IxoraImg","ref","useRouter","body","document","getElementsByTagName","store","state","hideConfigButton","showNavbar","showSidenav","showFooter","classList","remove","add","showErrorModal","showSuccessModal","errorMessage","successMessage","handleApiError","value","handleApiSuccess","message","goListPage","router","push","username","password","loggedIn","user","login","response","localStorage","setItem","data","access_token","JSON","stringify","http_status","Error","error"],"sources":["C:/Users/chink/Documents/GitHub/ixora-dashboard/src/views/Signin.vue"],"sourcesContent":["<script setup>\nimport { onBeforeUnmount, onBeforeMount } from \"vue\";\nimport { useStore } from \"vuex\";\n// import Navbar from \"@/examples/PageLayout/Navbar.vue\";\nimport ArgonInput from \"@/components/ArgonInput.vue\";\n// import ArgonSwitch from \"@/components/ArgonSwitch.vue\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nimport { apiRequest } from '@/assets/js/apiRequest.js'; \nimport ErrorModal from \"./components/ErrorModal.vue\";\nimport SuccessModal from \"./components/SuccessModal.vue\";\n\nimport IxoraImg from \"../assets/img/ixora_22.jpg\";\n\nimport { ref } from 'vue';\nimport { useRouter } from \"vue-router\";\n\nconst body = document.getElementsByTagName(\"body\")[0];\n\nconst store = useStore();\nonBeforeMount(() => {\n  store.state.hideConfigButton = true;\n  store.state.showNavbar = false;\n  store.state.showSidenav = false;\n  store.state.showFooter = false;\n  body.classList.remove(\"bg-gray-100\");\n});\nonBeforeUnmount(() => {\n  store.state.hideConfigButton = false;\n  store.state.showNavbar = true;\n  store.state.showSidenav = true;\n  store.state.showFooter = true;\n  body.classList.add(\"bg-gray-100\");\n});\n\n\nconst showErrorModal = ref(false);\nconst showSuccessModal = ref(false);\nconst errorMessage = ref('');\nconst successMessage = ref('');\n\nconst handleApiError = () => {\n  errorMessage.value = 'Username or Password Invalid';\n  showErrorModal.value = true;\n};\n\nconst handleApiSuccess = (message) => {\n  successMessage.value = message || 'Operation completed successfully';\n  showSuccessModal.value = true;\n};\n\nconst goListPage = () => {\n  showSuccessModal.value = false;\n  router.push('/account-management');\n};\n\nconst username = ref('');\nconst password = ref('');\nconst loggedIn = ref(false);\nconst user = ref('');\nconst router = useRouter();\n\n\nconst login = async () => {\n  try {\n    // Make API call to authenticate user\n    // Example using axios:\n    const response = await apiRequest('https://staging.itbrightsolution.com/ixora_backend/public/api/v1/login', {\n        username: username.value,\n        password: password.value\n    }, 'POST', false);\n\n    loggedIn.value = true;\n    user.value = response;\n    \n    // Assuming the response contains a token upon successful login\n    // Store the token in local storage\n    localStorage.setItem('access_token', response.data.access_token);\n    localStorage.setItem('user', JSON.stringify(response.data.user));\n    localStorage.setItem('authentication', true);\n    // For demonstration, setting loggedIn to true\n    \n\n    if (response.http_status < 300) {\n        handleApiSuccess('Login Successfully');\n      } else {\n        throw new Error(response.message);\n      }\n    }\n  catch (error) {\n    handleApiError(error);\n  }\n};\n\n</script>\n<template>\n  <div class=\"container top-0 position-sticky z-index-sticky\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <!-- <navbar\n          isBlur=\"blur  border-radius-lg my-3 py-2 start-0 end-0 mx-4 shadow\"\n          v-bind:darkMode=\"true\"\n          isBtn=\"bg-gradient-success\"\n        /> -->\n      </div>\n    </div>\n  </div>\n  <main class=\"mt-0 main-content\">\n    <section>\n      <div class=\"page-header min-vh-100\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div\n              class=\"mx-auto col-xl-4 col-lg-5 col-md-7 d-flex flex-column mx-lg-0\"\n            >\n              <div class=\"card card-plain\">\n                <div class=\"pb-0 card-header text-start\">\n                  <h4 class=\"font-weight-bolder\">Hi, <br> Welcome back.</h4>\n                  <!-- <p class=\"mb-0\">Enter your email and password to sign in</p> -->\n                </div>\n                <div class=\"card-body\">\n                  <form role=\"form\" @submit.prevent=\"login\">\n                    <div class=\"mb-3\">\n                      <label for=\"username\">Username :</label>\n                      <argon-input\n                        id=\"username\"\n                        type=\"\"\n                        placeholder=\"username\"\n                        name=\"username\"\n                        size=\"lg\"\n                        v-model=\"username\"\n                      />\n                    </div>\n                    <div class=\"mb-3\">\n                      <label for=\"password\">Password :</label>\n                      <argon-input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        size=\"lg\"\n                        v-model=\"password\"\n                      />\n                    </div>\n                    <!-- <argon-switch id=\"rememberMe\" name=\"remember-me\"\n                      >Remember me</argon-switch\n                    > -->\n\n                    <div class=\"text-center\">\n                      <argon-button\n                        class=\"mt-4\"\n                        type=\"submit\"\n                        variant=\"gradient\"\n                        color=\"danger\"\n                        fullWidth\n                        size=\"lg\"\n                        >Login</argon-button\n                      >\n                    </div>\n                  </form>\n                </div>\n                <!-- <div class=\"px-1 pt-0 text-center card-footer px-lg-2\">\n                  <p class=\"mx-auto mb-4 text-sm\">\n                    Don't have an account?\n                    <a\n                      href=\"javascript:;\"\n                      class=\"text-success text-gradient font-weight-bold\"\n                      >Sign up</a\n                    >\n                  </p>\n                </div> -->\n              </div>\n            </div>\n            <div\n              class=\"top-0 my-auto text-center col-6 d-lg-flex d-none h-100 pe-0 position-absolute end-0 justify-content-center flex-column\"\n            >\n              <div\n                class=\"position-relative bg-gradient-primary h-100 m-3 px-7 border-radius-lg d-flex flex-column justify-content-center overflow-hidden\"\n                style=\"\n                  background-image: url(IxoraImg);\n                  background-size: cover;\n                \"\n              >\n                <span class=\"mask bg-gradient-danger opacity-6\"></span>\n                <!-- <h4\n                  class=\"mt-5 text-white font-weight-bolder position-relative\"\n                >\n                  \"Attention is the new currency\"\n                </h4>\n                <p class=\"text-white position-relative\">\n                  The more effortless the writing looks, the more effort the\n                  writer actually put into the process.\n                </p> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <error-modal :show-modal=\"showErrorModal\" :error-message=\"errorMessage\" @close=\"showErrorModal = false\" />\n    <success-modal :show-modal=\"showSuccessModal\" :success-message=\"successMessage\" @close=\"goListPage\" />\n  </main>\n</template>\n"],"mappings":";AACA,SAASA,eAAe,EAAEC,aAAa,QAAQ,KAAK;AACpD,SAASC,QAAQ,QAAQ,MAAM;AAC/B;AACA,OAAOC,UAAU,MAAM,6BAA6B;AACpD;AACA,OAAOC,WAAW,MAAM,8BAA8B;AACtD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,YAAY,MAAM,+BAA+B;AAExD,OAAOC,QAAQ,MAAM,4BAA4B;AAEjD,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAErD,MAAMC,KAAK,GAAGZ,QAAQ,CAAC,CAAC;IACxBD,aAAa,CAAC,MAAM;MAClBa,KAAK,CAACC,KAAK,CAACC,gBAAgB,GAAG,IAAI;MACnCF,KAAK,CAACC,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BH,KAAK,CAACC,KAAK,CAACG,WAAW,GAAG,KAAK;MAC/BJ,KAAK,CAACC,KAAK,CAACI,UAAU,GAAG,KAAK;MAC9BR,IAAI,CAACS,SAAS,CAACC,MAAM,CAAC,aAAa,CAAC;IACtC,CAAC,CAAC;IACFrB,eAAe,CAAC,MAAM;MACpBc,KAAK,CAACC,KAAK,CAACC,gBAAgB,GAAG,KAAK;MACpCF,KAAK,CAACC,KAAK,CAACE,UAAU,GAAG,IAAI;MAC7BH,KAAK,CAACC,KAAK,CAACG,WAAW,GAAG,IAAI;MAC9BJ,KAAK,CAACC,KAAK,CAACI,UAAU,GAAG,IAAI;MAC7BR,IAAI,CAACS,SAAS,CAACE,GAAG,CAAC,aAAa,CAAC;IACnC,CAAC,CAAC;IAGF,MAAMC,cAAc,GAAGd,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMe,gBAAgB,GAAGf,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMgB,YAAY,GAAGhB,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMiB,cAAc,GAAGjB,GAAG,CAAC,EAAE,CAAC;IAE9B,MAAMkB,cAAc,GAAGA,CAAA,KAAM;MAC3BF,YAAY,CAACG,KAAK,GAAG,8BAA8B;MACnDL,cAAc,CAACK,KAAK,GAAG,IAAI;IAC7B,CAAC;IAED,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;MACpCJ,cAAc,CAACE,KAAK,GAAGE,OAAO,IAAI,kCAAkC;MACpEN,gBAAgB,CAACI,KAAK,GAAG,IAAI;IAC/B,CAAC;IAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;MACvBP,gBAAgB,CAACI,KAAK,GAAG,KAAK;MAC9BI,MAAM,CAACC,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAED,MAAMC,QAAQ,GAAGzB,GAAG,CAAC,EAAE,CAAC;IACxB,MAAM0B,QAAQ,GAAG1B,GAAG,CAAC,EAAE,CAAC;IACxB,MAAM2B,QAAQ,GAAG3B,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAM4B,IAAI,GAAG5B,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMuB,MAAM,GAAGtB,SAAS,CAAC,CAAC;IAG1B,MAAM4B,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACF;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMlC,UAAU,CAAC,wEAAwE,EAAE;UACxG6B,QAAQ,EAAEA,QAAQ,CAACN,KAAK;UACxBO,QAAQ,EAAEA,QAAQ,CAACP;QACvB,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC;QAEjBQ,QAAQ,CAACR,KAAK,GAAG,IAAI;QACrBS,IAAI,CAACT,KAAK,GAAGW,QAAQ;;QAErB;QACA;QACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACG,IAAI,CAACC,YAAY,CAAC;QAChEH,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEG,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACG,IAAI,CAACL,IAAI,CAAC,CAAC;QAChEG,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;QAC5C;;QAGA,IAAIF,QAAQ,CAACO,WAAW,GAAG,GAAG,EAAE;UAC5BjB,gBAAgB,CAAC,oBAAoB,CAAC;QACxC,CAAC,MAAM;UACL,MAAM,IAAIkB,KAAK,CAACR,QAAQ,CAACT,OAAO,CAAC;QACnC;MACF,CAAC,CACH,OAAOkB,KAAK,EAAE;QACZrB,cAAc,CAACqB,KAAK,CAAC;MACvB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}